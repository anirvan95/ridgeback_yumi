<?xml version="1.0"?>
<robot name="ridgeback_yumi" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find ridgeback_description)/urdf/ridgeback.urdf.xacro" />



  <!-- Import Rviz colors -->
  <xacro:include filename="$(find yumi_description)/urdf/Util/materials.xacro" />
  <!-- Import utilities -->
  <xacro:include filename="$(find yumi_description)/urdf/Util/utilities.xacro" />
  <!--Import the yumi macro -->
  <xacro:include filename="$(find yumi_description)/urdf/yumi.xacro"/>
  <!--Import the yumi servo gripper macro -->
  <xacro:include filename="$(find yumi_description)/urdf/Grippers/yumi_servo_gripper.xacro"/>
  <!--Import the yumi optodaq sensors macro -->
  <xacro:include filename="$(find yumi_description)/urdf/Extras/yumi_optodaq_sensors.xacro"/>
  <!-- Import Gazebo plugins -->
  <xacro:include filename="$(find yumi_description)/urdf/Gazebo/gazebo.urdf.xacro"/>


  <!--yumi-->
  <xacro:yumi name="yumi" hardware_interface="hardware_interface/VelocityJointInterface" parent="yumi_pedestal">
    <origin xyz="0 0 0.1" rpy="0 0 0" />
  </xacro:yumi>


  <xacro:yumi_optodaq_sensor name="optodaq_r" parent="yumi_link_7_r">
      <origin xyz="0 0 0.033" rpy="0 ${PI} ${-PI/4}" />
  </xacro:yumi_optodaq_sensor>

  <xacro:yumi_optodaq_sensor name="optodaq_l" parent="yumi_link_7_l">
	  <origin xyz="0 0 0.033" rpy="0 ${PI} ${-PI/4}" />
  </xacro:yumi_optodaq_sensor>

  <!--right gripper-->
  <xacro:yumi_servo_gripper name="gripper_r" hardware_interface="hardware_interface/EffortJointInterface" parent="optodaq_r_sensor_link">
    <origin xyz="0 0 -0.033" rpy="${PI} 0.0 ${PI/4}" />
  </xacro:yumi_servo_gripper>

  <!--left gripper-->
  <xacro:yumi_servo_gripper name="gripper_l" hardware_interface="hardware_interface/EffortJointInterface" parent="optodaq_l_sensor_link">
    <origin xyz="0 0 -0.033" rpy="${PI} 0.0 ${PI/4}" />
  </xacro:yumi_servo_gripper>


  <xacro:property name="pedestal_height" value="0.28" />
  <xacro:property name="pedestal_offset_x" value="0.32" />
  <xacro:property name="yumi_offset_x" value="0.06" />
  <xacro:property name="yumi_height" value="0.25" />
  
  <joint name="ridgeback_base_to_pedestal" type="fixed">
    <origin rpy="0 0 ${PI}" xyz="${pedestal_offset_x} 0 ${pedestal_height}" />
    <parent link="base_link" />
    <child link="yumi_pedestal" />
  </joint>

  <link name="yumi_pedestal">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <geometry>
        <mesh filename="package://ridgeback_yumi_description/meshes/IRB14000_mount.stl"/>
      </geometry>
      <material name="black" />
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 ${PI}" />
      <geometry>
        <mesh filename="package://ridgeback_yumi_description/meshes/IRB14000_mount.stl"/>
      </geometry>
      <material name="black" />
    </visual>
  </link>


  <joint name="pedestal_to_yumi" type="fixed">
    <origin rpy="0 0 ${PI}" xyz="${yumi_offset_x} 0 ${yumi_height}" />
    <parent link="yumi_pedestal" />
    <child link="yumi_base_link" />
  </joint>


  <!-- Constants for Intel d435 mount dimensions -->
  <!-- Constants for camera mount  dimensions -->
   <xacro:property name="massp" value="0.05" /> <!-- mass for lower mount -->
   <xacro:property name="widthp" value="0.025" /> <!-- width of lower mount -->
   <xacro:property name="heightp" value="0.085" /> <!--height of lower mount -->
   <xacro:property name="mass" value="0.05" /> <!-- mass for camera mount -->
   <xacro:property name="width" value="0.02" /> <!-- radius of the camera mount -->
   <xacro:property name="height" value="0.085" /> <!--height of the camera mount -->
   <xacro:property name="camera_length" value="0.0492" /> <!-- Size of square 'camera' box -->
   <xacro:property name="camera_width" value="0.025" /> <!-- Size of square 'camera' box -->
   <xacro:property name="angle_diff" value="${pi/3}" /> <!-- angle btw camera mount -->
   <xacro:property name="angle_tilt_1" value="0" /> <!-- horizontal tilt of camera 1  -->
   <xacro:property name="angle_tilt_2" value="0" /> <!-- horizontal tilt of camera 2 -->
   <xacro:property name="angle_tilt_3" value="0" /> <!-- horizontal tilt of camera 3 -->

  <xacro:include filename="$(find ridgeback_yumi_description)/urdf/multi_d435.gazebo" />
  
  <joint name="ridgeback_to_mount" type="fixed">
    <parent link="mid_mount" />
    <child link="mount_tripod" />
    <origin rpy="0 0 0" xyz="0.17 0 0.72" />
  </joint>


   <!-- Tripod -->
      <link name="mount_tripod">
        <collision>
          <origin xyz="0 0 ${heightp/2}" rpy="0 0 0"/>
          <geometry>
             <cylinder radius="${widthp}" length="${heightp}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
          <geometry>
    	       <mesh filename="package://ridgeback_yumi_description/meshes/tripod_simplified.STL"/>
          </geometry>

          <material name="orange"/>
        </visual>

        <inertial>
          <origin xyz="0 0 ${heightp/2}" rpy="0 0 0"/>
          <mass value="${massp}"/>
          <inertia
    	  ixx="${massp / 12.0 * (widthp*widthp + heightp*heightp)}" ixy="0.0" ixz="0.0"
    	  iyy="${massp / 12.0 * (heightp*heightp + widthp*widthp)}" iyz="0.0"
    	  izz="${massp / 12.0 * (widthp*widthp + widthp*widthp)}"/>
        </inertial>
      </link>


      <joint name="camera_mount_joint" type="fixed">
        <parent link="mount_tripod" />
        <child link="multi_d435_mount" />
        <origin rpy="0 0 0" xyz="0 0 ${heightp} " />
      </joint>


      <!-- Camera mount Link -->
      <link name="multi_d435_mount">
        <collision>
          <origin xyz="0 0 ${height/2}" rpy="0 0 0"/>
          <geometry>
             <cylinder radius="${width}" length="${height}"/>
          </geometry>
        </collision>

       <visual>
          <origin xyz="0 0 0" rpy="0 0 ${pi/6}"/>
          <geometry>
    	       <mesh filename="package://ridgeback_yumi_description/meshes/D435x6_mounting-support.STL"/>
          </geometry>
        </visual>

        <inertial>
          <origin xyz="0 0 ${height/2}" rpy="0 0 0"/>
          <mass value="${mass}"/>
          <inertia
    	  ixx="${mass / 12.0 * (width*width + height*height)}" ixy="0.0" ixz="0.0"
    	  iyy="${mass / 12.0 * (height*height + width*width)}" iyz="0.0"
    	  izz="${mass / 12.0 * (width*width + width*width)}"/>
        </inertial>
      </link>


      <joint name="camera_joint_1" type="fixed">
        <origin xyz="${width+camera_width} 0 ${height-camera_length}" rpy="${pi/2} ${angle_tilt_1} 0"/>
        <parent link="multi_d435_mount"/>
        <child link="camera1_link"/>
      </joint>

      <joint name="camera_joint_2" type="fixed">
        <origin xyz="${(width+camera_width)*cos(angle_diff)} ${(width+camera_width)*sin(angle_diff)} ${height-camera_length}" rpy="${pi/2} ${angle_tilt_2} ${angle_diff}"/>
        <parent link="multi_d435_mount"/>
        <child link="camera2_link"/>
      </joint>

      <joint name="camera_joint_3" type="fixed">
        <origin xyz="${(width+camera_width)*cos(angle_diff)} -${(width+camera_width)*sin(angle_diff)} ${height-camera_length}" rpy="${pi/2} ${angle_tilt_3} -${angle_diff}"/>
        <parent link="multi_d435_mount"/>
        <child link="camera3_link"/>
      </joint>


      <!-- Camera 1-->
      <link name="camera1_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
    	       <box size="${camera_width} ${camera_length} ${camera_width}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
          <geometry>
    	       <mesh filename="package://ridgeback_yumi_description/meshes/Intel_RealSense_Depth_Camera_D435.STL"/>
          </geometry>
          <material name="red"/>
        </visual>

        <inertial>
          <mass value="0.0615752" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="9.108e-05" ixy="0" ixz="0" iyy="2.51e-06" iyz="0" izz="8.931e-05" />
        </inertial>
      </link>

      <!-- Camera 2-->
      <link name="camera2_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
    	       <box size="${camera_length} ${camera_width} ${camera_width}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
          <geometry>
    	       <mesh filename="package://ridgeback_yumi_description/meshes/Intel_RealSense_Depth_Camera_D435.STL"/>
          </geometry>
          <material name="red"/>
        </visual>

        <inertial>
          <mass value="0.0615752" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="9.108e-05" ixy="0" ixz="0" iyy="2.51e-06" iyz="0" izz="8.931e-05" />
        </inertial>
      </link>

      <!-- Camera 3-->
      <link name="camera3_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
    	       <box size="${camera_length} ${camera_width} ${camera_width}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
          <geometry>
    	       <mesh filename="package://ridgeback_yumi_description/meshes/Intel_RealSense_Depth_Camera_D435.STL"/>
          </geometry>
          <material name="red"/>
        </visual>
        <inertial>
          <mass value="0.0615752" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="9.108e-05" ixy="0" ixz="0" iyy="2.51e-06" iyz="0" izz="8.931e-05" />
        </inertial>
      </link>

        <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
    <joint name="camera_optical_joint_1" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera1_link"/>
    <child link="camera_link_optical_1"/>
  </joint>

  <link name="camera_link_optical_1">
  </link>


  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint_2" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera2_link"/>
    <child link="camera_link_optical_2"/>
  </joint>

  <link name="camera_link_optical_2">
  </link>


  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint_3" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera3_link"/>
    <child link="camera_link_optical_3"/>
  </joint>

  <link name="camera_link_optical_3">
</link>
</robot>
